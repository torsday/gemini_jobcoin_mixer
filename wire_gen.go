// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/torsday/gemini_jobcoin_mixer/api_ambassador/base"
	service2 "github.com/torsday/gemini_jobcoin_mixer/api_ambassador/service"
	service3 "github.com/torsday/gemini_jobcoin_mixer/mixer/domain/service"
	"github.com/torsday/gemini_jobcoin_mixer/pathway/domain/repository"
	"github.com/torsday/gemini_jobcoin_mixer/pathway/domain/service"
	"net/http"
)

// Injectors from wire.go:

func InitializePathwayTbl() *repository.PathwayTbl {
	pathwayTbl := repository.NewPathwayTbl()
	return pathwayTbl
}

func InitializePathwayRepository() *repository.PathwayRepository {
	pathwayTbl := repository.NewPathwayTbl()
	pathwayRepository := repository.NewPathwayRepository(pathwayTbl)
	return pathwayRepository
}

func InitializePathwayService() *service.PathwayService {
	pathwayTbl := repository.NewPathwayTbl()
	pathwayRepository := repository.NewPathwayRepository(pathwayTbl)
	pathwayService := service.NewPathwayService(pathwayRepository)
	return pathwayService
}

func InitializeAmbassador(httpClient *http.Client) *base.Ambassador {
	ambassador := base.NewAmbassador(httpClient)
	return ambassador
}

func InitializeApiAmbassadorService(httpClient *http.Client) *service2.ApiAmbassadorService {
	ambassador := base.NewAmbassador(httpClient)
	apiAmbassadorService := service2.NewApiAmbassadorService(ambassador)
	return apiAmbassadorService
}

func InitializeMixerService(activePoolAddress string, httpClient *http.Client) *service3.MixerService {
	pathwayTbl := repository.NewPathwayTbl()
	pathwayRepository := repository.NewPathwayRepository(pathwayTbl)
	pathwayService := service.NewPathwayService(pathwayRepository)
	ambassador := base.NewAmbassador(httpClient)
	apiAmbassadorService := service2.NewApiAmbassadorService(ambassador)
	mixerService := service3.NewMixerService(pathwayService, apiAmbassadorService, activePoolAddress)
	return mixerService
}
